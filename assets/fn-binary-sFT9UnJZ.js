var c=Object.defineProperty;var l=(s,t,e)=>t in s?c(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var i=(s,t,e)=>(l(s,typeof t!="symbol"?t+"":t,e),e);const r="fn-binary";class u extends HTMLElement{constructor(){super();i(this,"playing");i(this,"current",0);i(this,"binary",[]);i(this,"intersectionObserver",new IntersectionObserver(e=>{e.forEach(n=>{n.isIntersecting?this.play():this.stop()})}));this.attachShadow({mode:"open"})}static get observedAttributes(){return["message"]}connectedCallback(){this.intersectionObserver.observe(this),this.addEventListener("mouseenter",this.stop),this.addEventListener("mouseleave",this.play)}disconnectedCallback(){this.stop(),this.intersectionObserver.unobserve(this),this.removeEventListener("mouseenter",this.stop),this.removeEventListener("mouseleave",this.play)}attributeChangedCallback(e,n,a){if(n!==a&&e==="message"){const h=this.getAttribute("message");this.binary=h.split("").map(o=>o.charCodeAt(0).toString(2).padStart(8,"0"))}}play(){if(this.playing)return;const e=this.binary.length-1;this.render(this.binary[this.current]),this.playing=setInterval(()=>{this.current===e?this.current=0:this.current+=1,this.render(this.binary[this.current])},2e3)}stop(){clearInterval(this.playing),this.playing=void 0}render(e){e&&(this.shadowRoot.innerHTML=e)}}customElements.get(r)||customElements.define(r,u);
